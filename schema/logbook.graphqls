enum LogEntryType {
    Message,
}

interface GenericLogEntry {
    id: ID!
    time: Time!
    entryType: LogEntryType!

    facility: String!
    beamtime: String
    tags: [String!]
    source: String
}

type LogEntryMessage implements GenericLogEntry {
    id: ID!
    time: Time!
    entryType: LogEntryType! # Always LogEntryType.Message

    facility: String!
    beamtime: String
    tags: [String!]
    source: String

    # Payload
    message: String!
    attachments: Map!
}

input NewLogEntryMessage {
    facility: String!
    beamtime: String
    tags: [String!]
    source: String

    # Payload
    message: String!
    attachments: Map!
}

union LogEntry = LogEntryMessage

type LogEntryQueryResult {
    entries: [LogEntry!]!
    start: Int!
    hasMore: Boolean!
}
